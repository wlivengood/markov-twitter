'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ngramFingerprint;

var _deburr = require('lodash/deburr');

var _deburr2 = _interopRequireDefault(_deburr);

var _uniq = require('lodash/uniq');

var _uniq2 = _interopRequireDefault(_uniq);

var _ngrams = require('../stats/ngrams');

var _ngrams2 = _interopRequireDefault(_ngrams);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Constants.
 */
var UNDESIRABLES = new RegExp('[\\s\\u2000-\\u206F\\u2E00-\\u2E7F\'!"#$%&()*+,\\-.\\/:;<=>?@\\[\\]^_`{|}~\\x00-\\x08\\x0A-\\x1F\\x7F]', 'g');

/**
 * Fingerprint function.
 *
 * @param  {string} string - Target string.
 * @param  {number} n      - Size of the subsequences.
 * @return {string}        - The fingerprint.
 */
/* eslint no-control-regex: 0 */
/**
 * Talisman keyers/ngram-fingerprint
 * ==================================
 *
 * Keyer taking a string and normalizing it into a "ngram fingerprint".
 */
function ngramFingerprint(n, string) {

  //-- 1) Case normalization
  string = string.toLowerCase();

  //-- 2) Dropping punctuation, whitespace and control characters
  string = string.replace(UNDESIRABLES, '');

  //-- 3) Computing ngrams
  var grams = (0, _ngrams2.default)(n, string);

  //-- 4) Keeping unique grams
  grams = (0, _uniq2.default)(grams);

  //-- 5) Sorting the grams
  grams.sort();

  //-- 6) Joining the grams
  string = grams.join('');

  //-- 7) Deburring
  return (0, _deburr2.default)(string);
}